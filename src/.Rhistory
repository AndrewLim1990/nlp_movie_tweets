geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
ggsave("../results/threshold_graph.png")
time_diff_prev_threshold <- 0.5
time_diff_prev_notif <- seq(0.5,24,0.5)
asymptote <-  0.99
threshold <- asymptote + 0.01*(time_diff_prev_threshold/time_diff_prev_notif)
data1 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
time_diff_prev_threshold <- 5
threshold <- asymptote + 0.01*(time_diff_prev_threshold/time_diff_prev_notif)
data5 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
ggsave("../results/threshold_graph.png")
time_diff_prev_threshold <- 1
time_diff_prev_notif <- seq(0.5,24,0.5)
asymptote <-  0.99
threshold <- asymptote + 0.01*(time_diff_prev_threshold/time_diff_prev_notif)
data1 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
time_diff_prev_threshold <- 5
threshold <- asymptote + 0.01*(time_diff_prev_threshold/time_diff_prev_notif)
data5 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_notif1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_notif5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
time_diff_prev_threshold1 <- 1
time_diff_prev_notif <- seq(0.5,24,0.5)
asymptote <-  0.99
threshold <- asymptote + 0.01*(time_diff_prev_threshold/time_diff_prev_notif)
data1 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
time_diff_prev_threshold5 <- 5
threshold <- asymptote + 0.01*(time_diff_prev_threshold/time_diff_prev_notif)
data5 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_notif1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_notif5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
ggsave("../results/threshold_graph.png")
time_diff_prev_threshold1 <- 1
time_diff_prev_notif <- seq(0.5,24,0.5)
asymptote <-  0.99
threshold <- asymptote + 0.01*(time_diff_prev_threshold1/time_diff_prev_notif)
data1 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
time_diff_prev_threshold5 <- 5
threshold <- asymptote + 0.01*(time_diff_prev_threshold5/time_diff_prev_notif)
data5 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification")
ggsave("../results/threshold_graph.png")
library(ggthemes)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_wsj(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
install.packages("latex2exp")
library(latex2exp)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
geom_text(aes(x = 15, y = 0.9975, label = TeX("$\\alpha$"))) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
#geom_text(aes(x = 15, y = 0.9975, label = TeX("$\\alpha$"))) +
annotate(geom='text', x=15, y=0.9975, label=Tex("$\\hat{Y} = B_0 + B_1X_1", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
#geom_text(aes(x = 15, y = 0.9975, label = TeX("$\\alpha$"))) +
annotate(geom='text', x=15, y=0.9975, label=TeX("$\\hat{Y} = B_0 + B_1X_1", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$\\hat{Y} = B_0 + B_1X_1$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$T = m + 0.01*t_t/t_p$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$T = m + 0.01*t_t/t_p$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$T = m + 0.01\frac{t_t}{t_p}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$T = m + 0.01*\frac{t_t}{t_p}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$T = m + 0.01*\\frac{t_t}{t_p}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$T = m + 0.01*\\frac{t_t}{t_p}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + 0.01*\\frac{t_min}{t_prev}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + 0.01*\\frac{t_{min}}{t_{prev}}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold") +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + 0.01*\\frac{t_{min}}{t_{prev}}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab(paste0("Conformity score percentile threshold", TeX("$(C)$", output='character'))) +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + 0.01*\\frac{t_{min}}{t_{prev}}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab(paste0("Conformity score percentile threshold", TeX("$C$", output='character'))) +
xlab("Hours since previous notification") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + 0.01*\\frac{t_{min}}{t_{prev}}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold (C)") +
xlab("Hours since previous notification (t_prev)") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
time_diff_prev_threshold1 <- 1
time_diff_prev_notif <- seq(0.5,24,0.5)
asymptote <-  0.99
threshold <- asymptote + 0.01*(time_diff_prev_threshold1/time_diff_prev_notif)
data1 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
time_diff_prev_threshold5 <- 5
threshold <- asymptote + 0.01*(time_diff_prev_threshold5/time_diff_prev_notif)
data5 <- data.frame(time_diff_prev_notif = time_diff_prev_notif, threshold = threshold)
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + (1-m)*\\frac{t_{min}}{t_{prev}}$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold (C)") +
xlab("Hours since previous notification (t_prev)") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + (1-m)*\left(\\frac{t_{min}}{t_{prev}}\right)$", output='character'), parse=TRUE) +
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + (1-m)*\\left(\\frac{t_{min}}{t_{prev}}\\right)$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold (C)") +
xlab("Hours since previous notification (t_prev)") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + (1-m)\\left(\\frac{t_{min}}{t_{prev}}\\right)$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold (C)") +
#xlab("Hours since previous notification (t_prev)") +
xlab(TeX("$\\text{Hours since previous notification}t_{prev}$"))
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + (1-m)\\left(\\frac{t_{min}}{t_{prev}}\\right)$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold (C)") +
#xlab("Hours since previous notification (t_prev)") +
xlab(TeX("$\\text{Hours since previous notification}t_{prev}$", output='character')) +
theme_few(base_family = "GillSans")
ggplot(data1) +
geom_line(aes(x = time_diff_prev_notif, y = threshold), color = "blue") +
geom_vline(xintercept = time_diff_prev_threshold1, color = "blue", linetype = "dotted") +
geom_line(data = data5, aes(x = time_diff_prev_notif, y = threshold), color = "green") +
geom_vline(xintercept = time_diff_prev_threshold5, color = "green", linetype = "dotted") +
geom_hline(yintercept = asymptote, linetype = "dashed") +
annotate(geom='text', x=15, y=0.9975, label=TeX("$C = m + (1-m)\\left(\\frac{t_{min}}{t_{prev}}\\right)$", output='character'), parse=TRUE) +
scale_y_continuous(limits = c(0.99, 1), labels = percent) +
labs(subtitle="After a notification is sent, how long to wait before sending another?", title="Conformity score percentile threshold function") +
ylab("Conformity score percentile threshold (C)") +
xlab("Hours since previous notification (t_prev)") +
theme_few(base_family = "GillSans")
ggsave("../results/threshold_graph.png")
library(ggthemes)
library(knitr)
library(latex2exp)
library(lubridate)
library(scales)
library(tidyverse)
library(tidytext)
tweets = read.csv("../data/candidate_tweets.csv")
tweets$text <- as.character(tweets$text)
x <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
y <- c()
for (i in 1:length(x)) {
y <- append(y, x[i] + rnorm(1, 0, 0.2))
}
data <- data.frame(x = x, y = y)
prcomp(data,
center = TRUE,
scale. = TRUE)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
pca$rotation
as.matrix(data)%*%pca$rotation
data <- data.frame(as.matrix(data)%*%pca$rotation)
data
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
scale_x_continuous(limits = c(0,3)) +
scale_y_continuous(limits = c(0,3)) +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
xlab("Latent factor 1") +
ylab("Latent factor 2") +
theme_few(base_family = "GillSans")
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
xlab("Latent factor 1") +
ylab("Latent factor 2") +
theme_few(base_family = "GillSans")
x <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
y <- c()
for (i in 1:length(x)) {
y <- append(y, x[i] + rnorm(1, 0, 0.2))
}
data <- data.frame(x = x, y = y)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
data <- data.frame(as.matrix(data)%*%pca$rotation)
data
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
# xlab("Latent factor 1") +
# ylab("Latent factor 2") +
theme_few(base_family = "GillSans")
ggsave("../results/strong_clusters.png")
x <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
y <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
data <- data.frame(x = x, y = y)
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
# xlab("Latent factor 1") +
# ylab("Latent factor 2") +
theme_few(base_family = "GillSans")
ggplot(data) +
geom_point(aes(x = x, y = y), alpha = 0.4, color = "blue") +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
# xlab("Latent factor 1") +
# ylab("Latent factor 2") +
theme_few(base_family = "GillSans")
ggsave("../results/strong_clusters.png")
x <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
y <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
data <- data.frame(x = x, y = y)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
data <- data.frame(as.matrix(data)%*%pca$rotation)
ggplot(data) +
geom_point(aes(x = x, y = y), alpha = 0.4, color = "blue") +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
theme_few(base_family = "GillSans")
ggsave("../results/strong_clusters.png")
x <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
y <- rnorm(n = 200, mean = c(1,2), sd = c(0.1,0.1))
data <- data.frame(x = x, y = y)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
data <- data.frame(as.matrix(data)%*%pca$rotation)
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets do not come in strong clusters", subtitle="(Not real data)") +
theme_few(base_family = "GillSans")
ggsave("../results/strong_clusters.png")
x <- runif(n = 180, min = 0, max = 3)
x <- append(x, rnorm(n = 20, 1, 0.03))
y <- runif(n = 180, min = 0, max = 3)
y <- append(y, rnorm(n = 20, 1, 0.03))
data <- data.frame(x = x, y = y)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
data <- data.frame(as.matrix(data)%*%pca$rotation)
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets are mostly distinct, with occasional clusters", subtitle="(Not real data)") +
xlab("Latent factor 1") +
ylab("Latent factor 2") +
theme_few(base_family = "GillSans")
ggsave("../results/realistic_clusters.png")
x <- runif(n = 180, min = 0, max = 3)
x <- append(x, rnorm(n = 20, 1, 0.03))
y <- runif(n = 180, min = 0, max = 3)
y <- append(y, rnorm(n = 20, 1, 0.03))
data <- data.frame(x = x, y = y)
pca <- prcomp(data, center = TRUE, scale. = TRUE)
data <- data.frame(as.matrix(data)%*%pca$rotation)
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets are mostly distinct, with occasional clusters", subtitle="(Not real data)") +
theme_few(base_family = "GillSans")
ggsave("../results/realistic_clusters.png")
x <- runif(n = 180, min = 0, max = 3)
x <- append(x, rnorm(n = 20, 1, 0.03))
y <- runif(n = 180, min = 0, max = 3)
y <- append(y, rnorm(n = 20, 1, 0.03))
data <- data.frame(PC1 = x, PC2 = y)
# pca <- prcomp(data, center = TRUE, scale. = TRUE)
# data <- data.frame(as.matrix(data)%*%pca$rotation)
ggplot(data) +
geom_point(aes(x = PC1, y = PC2), alpha = 0.4, color = "blue") +
labs(title="Tweets are mostly distinct, with occasional clusters", subtitle="(Not real data)") +
theme_few(base_family = "GillSans")
ggsave("../results/realistic_clusters.png")
